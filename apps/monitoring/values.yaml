secrets:
- name: prometheus-httpauth
  data:
    "~vault_raw:iac/apps/httpauth/prometheus:username~": "~vault:iac/apps/httpauth/prometheus:httpauth_password~"
- name: alertmanager-httpauth
  data:
    "~vault_raw:iac/apps/httpauth/alertmanager:username~": "~vault:iac/apps/httpauth/alertmanager:httpauth_password~"
- name: smtp
  data:
    user: "~vault:iac/sendgrid:user~"
    password: "~vault:iac/sendgrid:password~"

kube-prometheus-stack:

  grafana:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - ~iac:subdomain_prefix~-grafana.~iac:root_domain~
      tls:
      - hosts:
        - ~iac:subdomain_prefix~-grafana.~iac:root_domain~
        secretName: grafana-tls
    persistence:
      enabled: true
    serviceMonitor:
      labels:
        release: monitoring
    grafana.ini:
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: true
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      server:
        root_url: https://~iac:subdomain_prefix~-grafana.~iac:root_domain~
      smtp:
        enabled: true
        host: smtp.sendgrid.net:587
        from_address: ~vault_raw:iac/sendgrid:from_address~
    smtp:
      existingSecret: "smtp"
      userKey: "user"
      passwordKey: "password"

  prometheus:
    prometheusSpec:
      retention: 10d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 100Gi
# TODO: change to monitor the embedded k3s etcd
#      volumes:
#        - name: etcd-certs
#          secret:
#              secretName: etcd-certs
#      volumeMounts:
#        - name: etcd-certs
#          mountPath: /etc/etcd-certs
#          readOnly: true

  prometheus-node-exporter:
    priorityClassName: system-node-critical
    tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      - operator: Exists
        effect: NoExecute

# TODO: change to monitor k3s

  kubeEtcd:
    enabled: false
#    endpoints:
#      - ~iac:controlplane_public_ip~
#    serviceMonitor:
#      scheme: https
#      caFile: /etc/etcd-certs/cacert
#      certFile: /etc/etcd-certs/cert
#      keyFile: /etc/etcd-certs/key
#
  kubeControllerManager:
    enabled: false
#    endpoints:
#      - ~iac:controlplane_public_ip~
#
  kubeScheduler:
    enabled: false
#    endpoints:
#      - ~iac:controlplane_public_ip~
#
#  kubeProxy:
#    enabled: true
#    serviceMonitor:
#      enabled: false
#    service:
#      enabled: false
