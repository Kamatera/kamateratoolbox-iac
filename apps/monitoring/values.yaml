secrets:
- name: prometheus-httpauth
  data:
    "~vault_raw:iac/apps/httpauth/prometheus:username~": "~vault:iac/apps/httpauth/prometheus:httpauth_password~"

kube-prometheus-stack:

  grafana:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - cloudcli-grafana.~iac:root_domain~
    persistence:
      enabled: true
    serviceMonitor:
      labels:
        release: monitoring

  prometheus:
    prometheusSpec:
      retention: 10d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 100Gi
      volumes:
        - name: etcd-certs
          secret:
              secretName: etcd-certs
      volumeMounts:
        - name: etcd-certs
          mountPath: /etc/etcd-certs
          readOnly: true

  prometheus-node-exporter:
    priorityClassName: system-node-critical
    tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      - operator: Exists
        effect: NoExecute

  kubeEtcd:
    endpoints:
      - 5.180.182.209
    serviceMonitor:
      scheme: https
      caFile: /etc/etcd-certs/cacert
      certFile: /etc/etcd-certs/cert
      keyFile: /etc/etcd-certs/key

  kubeControllerManager:
    endpoints:
      - 5.180.182.209

  kubeProxy:
    endpoints:
      - 5.180.182.209

  kubeScheduler:
    endpoints:
      - 5.180.182.209
